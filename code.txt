1.多态的类，内存布局是怎样  
2.extern "C"的作用:
    实现C和C++的混合编程；因为函数被C++编译后的名字会变长，与C生成的不一致，造成C++不能直接调用C函数。
extern关键字的作用:
    extern置于变量或函数前，用于标示变量或函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。它只要有两个作用：

当它与“C”一起连用的时候，如：extern "C" void fun(int a,int b);则告诉编译器在编译fun这个函数时候按着C的规矩去翻译，
而不是C++的（这与C++的重载有关，C++语言支持函数重载，C语言不支持函数重载，函数被C++编译器编译后在库中的名字与C语言的不同）
当extern不与“C”在一起修饰变量或函数时，如：extern int g_Int；它的作用就是声明函数或全局变量的作用范围的关键字，
其声明的函数和变量可以在本模块或其他模块中使用。记住它是一个声明不是定义!也就是说B模块(编译单元)要是引用模块(编译单元)A中定义的全局变量或函数时，
它只要包含A模块的头文件即可,在编译阶段，模块B虽然找不到该函数或变量，但它不会报错，它会在连接时从模块A生成的目标代码中找到此函数。

如何引用一个已经定义过的全局变量？
引用头文件和extern关键字。 如果采用引用头文件， 若变量写错了，则在编译期间便会出错。 如果用extern则在链接阶段报错。
